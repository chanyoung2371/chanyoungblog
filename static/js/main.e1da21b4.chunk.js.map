{"version":3,"sources":["Component/Nav/SidebarData.js","Component/Nav/Nav.js","pages/Home.js","pages/Map.js","Component/Movie/Movie.js","pages/Moviepage.js","App.js","reportWebVitals.js","index.js"],"names":["SidebarData","title","path","icon","cName","Nav","useState","sidebar","setSidebar","showSidebar","Provider","value","color","className","to","onClick","map","item","index","Home","Map","Movie","year","summary","poster","genres","src","alt","genre","slice","Moviepage","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","App","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1da21b4.chunk.js","sourcesContent":["import React from 'react'\nimport * as FaIcons from \"react-icons/fa\";\nimport * as BsIcons from \"react-icons/bs\";\nimport * as AiIcons from \"react-icons/ai\";\nimport * as RiIcons from \"react-icons/ri\";\nimport * as IoIcons from \"react-icons/io\";\n\nexport const SidebarData= [\n    {\n        title: 'Home',\n        path: '/',\n        icon: <AiIcons.AiFillHome />,\n        cName: 'nav-text'\n    },\n    {\n        title: 'Movie',\n        path: '/movie',\n        icon: <RiIcons.RiMovie2Line/>,\n        cName: 'nav-text'\n    },\n    {\n        title: 'Map',\n        path: '/map',\n        icon: <BsIcons.BsMap/>,\n        cName: 'nav-text'\n    },\n    {\n        title: 'Messages',\n        path: '/messages',\n        icon: <FaIcons.FaEnvelopeOpenText />,\n        cName: 'nav-text'\n    },\n    {\n        title: 'Support',\n        path: '/support',\n        icon: <IoIcons.IoMdHelpCircle />,\n        cName: 'nav-text'\n    },\n    \n]","import React, { useState } from 'react';\nimport * as BsIcons from \"react-icons/bs\";\n//import * as FaIcons from \"react-icons/fa\";\nimport * as AiIcons from \"react-icons/ai\";\nimport { Link } from 'react-router-dom';\nimport { SidebarData } from './SidebarData';\nimport './Nav.css';\nimport {IconContext} from 'react-icons'\n\nfunction Nav() {\n  const [sidebar, setSidebar] = useState(false);\n\n  const showSidebar = () => setSidebar(!sidebar);\n\n  return (\n    <>\n    <IconContext.Provider value={{color:'#fff'}}>\n    <div className=\"nav\">\n      <Link to=\"#\" className='menu-bars'>\n        <BsIcons.BsReverseLayoutTextSidebarReverse onClick={showSidebar} />\n      </Link>\n      <p className=\"nav-name\">찬영--React</p>\n    </div>\n    <nav className={sidebar ? 'nav-menu active': 'nav-menu'}>\n      <ul className='nav-menu-items'onClick={showSidebar}>\n        <li className =\"navbar-toggle\">\n          <Link to=\"#\" className='menu-bars'>\n            <AiIcons.AiOutlineClose />\n          </Link>\n\n        </li>\n          {SidebarData.map((item,index) =>{\n            return(\n              <li key={index} className={item.cName}>\n                <Link to={item.path}>\n                  {item.icon}\n                  <span>{item.title}</span>\n                </Link>\n              </li>\n            )\n          })}\n      </ul>\n    </nav>\n    </IconContext.Provider>\n      \n    </>\n  )\n}\n\nexport default Nav;\n","import React from 'react'\n\n\nfunction Home() {\n    return (\n        <div className='home'>\n            <div className=\"card-wrap\">\n                <div className=\"item\">\n                <p>ㅎㅇㅇㅎ</p>\n                </div>\n\n            </div>\n           \n\n            \n        </div>\n    );\n}\n\nexport default Home;\n","import React from 'react'\n\nfunction Map() {\n    return (\n        <div className='reports'>\n            <h1>Map</h1>\n            \n        </div>\n    );\n}\n\nexport default Map;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Movie.css\";\n\n\nfunction Movie({ year, title, summary, poster, genres }) {\n    return (\n        <div className=\"movie\">\n            <img src={poster} alt={title} title={title}>\n\n            </img>\n            <div className=\"movie_data\">\n            <h3 className=\"movie_title\">{title}</h3>\n            <h5 className=\"movie_year\">{year}</h5>\n            <ul className=\"movie_genres\">\n                {genres.map((genre, index) => ( <li key={index} className=\"genres_genres\">{genre}</li> ))}\n            </ul>\n            <p className=\"movie_summary\">{summary.slice(0,110)}...</p>\n            </div>\n        </div>\n    );\n}\n\nMovie.propTypes = {\n    id: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    summary: PropTypes.string.isRequired,\n    poster: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n\nexport default Movie;\n","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"../Component/Movie/Movie\";\n\n\n\nclass Moviepage extends React.Component {\n  state= {\n    isLoading:true,\n    movies: []\n  };\n  getMovies = async () => {\n     const {data:{data:{movies}}} = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");//api 데이터 가져옴\n     /*axios는 작은 layer axios가 느리기 때문에 async를 씀*/\n     this.setState({movies, isLoading: false });\n  }\n  componentDidMount(){  // render 하면 호출되는 life cycle method\n    this.getMovies();\n\n  }\n  render() {\n    const {isLoading, movies} = this.state;    \n    return ( \n    <section className=\"container\">\n      {isLoading ? (\n      <div className=\"loader\">\n        <span className=\"loader_text\">Loading...</span>\n    </div>):(\n      <div className=\"movies\">\n        {movies&& movies.map(movie => (\n           <Movie\n            key={movie.id}\n            id={movie.id}\n            year={movie.year}\n            title={movie.title}\n            summary={movie.summary}\n            poster={movie.medium_cover_image}\n            genres={movie.genres}\n            />\n        ))}\n      </div>\n    )}\n    </section>\n    );\n  }\n}\n\nexport default Moviepage;\n","//import React, {useState} from 'react';\nimport './App.css';\n//import Modal from './Component/Modal';\n//import List from './Component/List';\nimport Nav from './Component/Nav/Nav';\n//import Header from './Component/Header';\nimport { BrowserRouter as Router,Switch,Route} from 'react-router-dom';\nimport Home from './pages/Home';\nimport Map from './pages/Map';\nimport Movie from './pages/Moviepage';\n\nfunction App() {\n\n  return (\n    <>\n     <Router>\n      <Nav/>\n      <Switch>\n        <Route path='/' exact component={Home} />\n        <Route path='/movie' component={Movie} />\n        <Route path='/map' component={Map} />\n      </Switch>\n      </Router>\n      {/* <Header/>\n      <List/>\n  <Modal/>*/}\n    </>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}